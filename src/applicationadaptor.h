/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a applicationadaptor -c ApplicationAdaptor -i application.h -l Application /home/rekols/Projects/panda-files/src/org.panda.files.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef APPLICATIONADAPTOR_H
#define APPLICATIONADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "application.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.panda.Files
 */
class ApplicationAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.panda.Files")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.panda.Files\">\n"
"    <method name=\"preferences\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"desktopPrefrences\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"desktopManager\">\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"launchFiles\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"as\"/>\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"quit\"/>\n"
"    <method name=\"setWallpaper\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"emptyTrash\"/>\n"
"    <method name=\"findFiles\">\n"
"      <arg direction=\"in\" type=\"as\"/>\n"
"    </method>\n"
"    <signal name=\"wallpaperChanged\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"desktopManagerEnabled\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"wallpaper\"/>\n"
"  </interface>\n"
        "")
public:
    ApplicationAdaptor(Application *parent);
    virtual ~ApplicationAdaptor();

    inline Application *parent() const
    { return static_cast<Application *>(QObject::parent()); }

public: // PROPERTIES
    Q_PROPERTY(bool desktopManagerEnabled READ desktopManagerEnabled)
    bool desktopManagerEnabled() const;

    Q_PROPERTY(QString wallpaper READ wallpaper)
    QString wallpaper() const;

public Q_SLOTS: // METHODS
    void desktopManager(bool in0);
    void desktopPrefrences(const QString &in0);
    void emptyTrash();
    void findFiles(const QStringList &in0);
    void launchFiles(const QString &in0, const QStringList &in1, bool in2);
    void preferences(const QString &in0);
    void quit();
    void setWallpaper(const QString &in0);
Q_SIGNALS: // SIGNALS
    void wallpaperChanged();
};

#endif
